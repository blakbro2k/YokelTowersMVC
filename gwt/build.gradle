apply plugin: 'gwt'
apply plugin: 'war'
apply plugin: 'jetty'

gwt {
  gwtVersion = gwtFrameworkVersion // Should match the version used for building the GWT backend. See gradle.properties.
  maxHeapSize = '1G' // Default 256m is not enough for the GWT compiler. GWT is HUNGRY.
  minHeapSize = '1G'

  src = files(file('src/main/java')) // Needs to be in front of "modules" below.
  modules 'net.asg.games.GdxDefinition'
  devModules 'net.asg.games.GdxDefinitionSuperdev'
  project.webAppDirName = 'webapp'

  compiler {
    strict = true
    disableCastChecking = true
  }
}

dependencies {
  implementation project(':core')
  implementation "com.badlogicgames.gdx:gdx:$gdxVersion:sources"
  implementation "com.badlogicgames.gdx:gdx-backend-gwt:$gdxVersion"
  implementation "com.badlogicgames.gdx:gdx-backend-gwt:$gdxVersion:sources"
  implementation "com.github.czyzby:gdx-autumn:$autumnVersion:sources"
  implementation "com.github.czyzby:gdx-autumn-gwt:$autumnVersion"
  implementation "com.github.czyzby:gdx-autumn-gwt:$autumnVersion:sources"
  implementation "com.github.czyzby:gdx-kiwi:$kiwiVersion:sources"
  implementation "com.github.czyzby:gdx-autumn-mvc:$autumnMvcVersion:sources"
  implementation "com.github.czyzby:gdx-lml:$lmlVersion:sources"
  implementation "com.github.czyzby:gdx-websocket:$websocketVersion:sources"
  implementation "com.github.czyzby:gdx-websocket-gwt:$websocketVersion"
  implementation "com.github.czyzby:gdx-websocket-gwt:$websocketVersion:sources"
  implementation "com.github.czyzby:gdx-websocket-serialization:$websocketSerializationVersion:sources"
  implementation "com.github.czyzby:gdx-lml-vis:$lmlVisVersion:sources"
  implementation "com.kotcrab.vis:vis-ui:$visUiVersion:sources"
}

task draftRun(type: JettyRunWar) {
  dependsOn draftWar
  dependsOn.remove('war')
  webApp = draftWar.archivePath
  daemon = true
}

task superDev(type: de.richsource.gradle.plugins.gwt.GwtSuperDev) {
  dependsOn draftRun
  doFirst {
  	gwt.modules = gwt.devModules
  }
}

task dist(dependsOn: [clean, compileGwt]) {
  doLast {
    file("build/dist").mkdirs()
    copy {
      from "build/gwt/out"
      into "build/dist"
    }
    copy {
      from "webapp"
      into "build/dist"
      }
    copy {
      from "war"
      into "build/dist"
    }
  }
}

draftWar {
  from "war"
}

task addSource << {
  sourceSets.main.compileClasspath += files(project(':core').sourceSets.main.allJava.srcDirs)
}

tasks.compileGwt.dependsOn(addSource)
tasks.draftCompileGwt.dependsOn(addSource)
eclipse.project.name = appName + '-gwt'
